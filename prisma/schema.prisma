// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["trademart"]
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  passwordHash  String?   @map("password_hash")
  role          String    @default("buyer") // buyer | supplier | admin
  createdAt     DateTime  @default(now()) @map("created_at")
  
  // Relations
  supplier      Supplier?
  buyerRfqs     Rfq[]     @relation("BuyerRfqs")
  buyerTransactions Transaction[] @relation("BuyerTransactions")
  
  // NextAuth.js fields
  accounts      Account[]
  sessions      Session[]

  @@map("users")
  @@schema("trademart")
}

model Supplier {
  id          String   @id @default(cuid())
  userId      String   @unique @map("user_id")
  companyName String   @map("company_name")
  industry    String?
  verified    Boolean  @default(false)
  rating      Decimal  @default(0) @db.Decimal(3, 2)
  createdAt   DateTime @default(now()) @map("created_at")
  
  // Relations
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  quotes      Quote[]
  supplierTransactions Transaction[] @relation("SupplierTransactions")

  @@map("suppliers")
  @@schema("trademart")
}

model Rfq {
  id          String   @id @default(cuid())
  buyerId     String   @map("buyer_id")
  title       String
  description String
  category    String?
  status      String   @default("open") // open | quoted | closed
  createdAt   DateTime @default(now()) @map("created_at")
  
  // Relations
  buyer       User     @relation("BuyerRfqs", fields: [buyerId], references: [id])
  quotes      Quote[]
  transactions Transaction[]

  @@map("rfqs")
  @@schema("trademart")
}

model Quote {
  id            String   @id @default(cuid())
  rfqId         String   @map("rfq_id")
  supplierId    String   @map("supplier_id")
  price         Decimal  @db.Decimal(12, 2)
  leadTimeDays  Int      @map("lead_time_days")
  notes         String?
  status        String   @default("pending") // pending | accepted | rejected
  createdAt     DateTime @default(now()) @map("created_at")
  
  // Relations
  rfq           Rfq      @relation(fields: [rfqId], references: [id], onDelete: Cascade)
  supplier      Supplier @relation(fields: [supplierId], references: [id])

  @@map("quotes")
  @@schema("trademart")
}

model Transaction {
  id          String   @id @default(cuid())
  buyerId     String   @map("buyer_id")
  supplierId  String   @map("supplier_id")
  rfqId       String   @map("rfq_id")
  amount      Decimal  @db.Decimal(12, 2)
  status      String   @default("held") // held | released | refunded
  createdAt   DateTime @default(now()) @map("created_at")
  
  // Relations
  buyer       User     @relation("BuyerTransactions", fields: [buyerId], references: [id])
  supplier    Supplier @relation("SupplierTransactions", fields: [supplierId], references: [id])
  rfq         Rfq      @relation(fields: [rfqId], references: [id])

  @@map("transactions")
  @@schema("trademart")
}

// NextAuth.js models
model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
  @@schema("trademart")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
  @@schema("trademart")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
  @@schema("trademart")
}
